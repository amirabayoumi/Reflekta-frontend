@import "tailwindcss";
@import url("https://fonts.googleapis.com/css2?family=Alef:wght@400;700&display=swap");

:root {
  --background: #ffffff;
  --foreground: #171717;
  --color-pink: #f7d2d2;
  --color-beige: #dad5c7;
  --color-lavender: #bca6c9;
  --color-purple: #937195;
  --color-plum: #553a5c;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --font-alef: "Alef", sans-serif;
  --color-pink: #f7d2d2;
  --color-beige: #dad5c7;
  --color-lavender: #bca6c9;
  --color-purple: #937195;
  --color-plum: #553a5c;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

.map-pin-icon {
  filter: drop-shadow(0 2px 4px rgb(184, 103, 103));
  transition: all 0.2s ease;
}

.map-pin-icon:hover {
  transform: translateY(-2px) scale(1.05);
  filter: drop-shadow(0 5px 6px rgb(0, 0, 0));
}

.map-circle-icon {
  border-radius: 50%;
  border: 2px solid rgb(73, 57, 71);
  box-shadow: 0 0 10px rgb(68, 40, 40);
  transition: all 0.2s ease;
}

.map-circle-icon:hover {
  transform: scale(1.3);
  box-shadow: 0 0 30px rgb(73, 52, 52);
}

.custom-plum-pin {
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.4));
  transition: all 0.2s ease;
}

.custom-plum-pin:hover {
  transform: translateY(-2px) scale(1.3);
  filter: drop-shadow(0 5px 15px rgb(145, 111, 111));
}

/* Add these animations to your globals.css file */

@keyframes float-clockwise {
  from {
    transform: rotate(0deg) translateX(var(--orbit-radius)) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translateX(var(--orbit-radius)) rotate(-360deg);
  }
}

@keyframes float-counterclockwise {
  from {
    transform: rotate(0deg) translateX(var(--orbit-radius)) rotate(0deg);
  }
  to {
    transform: rotate(-360deg) translateX(var(--orbit-radius)) rotate(360deg);
  }
}

@keyframes orbit {
  0% {
    transform: rotate(0deg) translateX(var(--orbit-radius)) rotate(0deg);
  }
  100% {
    transform: rotate(360deg) translateX(var(--orbit-radius)) rotate(-360deg);
  }
}

@keyframes orbit-reverse {
  0% {
    transform: rotate(0deg) translateX(var(--orbit-radius)) rotate(0deg);
  }
  100% {
    transform: rotate(-360deg) translateX(var(--orbit-radius)) rotate(360deg);
  }
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes pulse {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

/* Add these global animations for randomness */

.animate-float-gentle {
  animation: floatGentle 6s ease-in-out infinite;
}

.animate-float-random {
  animation: floatRandom 15s ease-in-out infinite;
}

.animate-pulse-gentle {
  animation: pulseGentle 4s ease-in-out infinite;
}

.animate-pulse-slow {
  animation: pulseSlow 6s ease-in-out infinite;
}

@keyframes floatGentle {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes floatRandom {
  0%,
  100% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(5px, -10px);
  }
  50% {
    transform: translate(-7px, 5px);
  }
  75% {
    transform: translate(10px, 7px);
  }
}

@keyframes pulseGentle {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes pulseSlow {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.03);
  }
}

@keyframes wobble {
  0%,
  100% {
    transform: translateX(0%) rotate(0deg);
  }
  15% {
    transform: translateX(-2%) rotate(-2deg);
  }
  30% {
    transform: translateX(1.5%) rotate(1.5deg);
  }
  45% {
    transform: translateX(-1.5%) rotate(-1.2deg);
  }
  60% {
    transform: translateX(1%) rotate(0.8deg);
  }
  75% {
    transform: translateX(-0.5%) rotate(-0.5deg);
  }
}

/* Ensure transform works correctly with multiple animations */
.floating-circle {
  position: absolute;
  transform-origin: center center;
  transform-style: preserve-3d;
  backface-visibility: hidden;
  will-change: transform;
}

.floating-circle[data-direction="clockwise"] {
  animation: float-clockwise var(--orbit-speed) linear infinite;
}

.floating-circle[data-direction="counterclockwise"] {
  animation: float-counterclockwise var(--orbit-speed) linear infinite;
}

.floating-element {
  transform-style: preserve-3d;
  backface-visibility: hidden;
  will-change: transform;
}

@property --orbit-radius {
  syntax: "<length>";
  initial-value: 0px;
  inherits: false;
}
